{"version":3,"sources":["Listitem.js","App.js","reportWebVitals.js","index.js"],"names":["Listitem","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","itemList","filterItems","filter","onSubmit","placeholder","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAyCeA,MApCf,SAAkBC,GACd,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GACxB,OACI,qBAAKC,UAAU,OAAf,SACI,8BACI,uBACIC,KAAK,OACLC,GAAIH,EAAKI,IACTC,MAAOL,EAAKM,KACZC,SACI,SAACC,GACGZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QAIjD,+BACI,cAAC,IAAD,CACIH,UAAU,UACVU,KAAK,QACLC,QAAU,kBAAMhB,EAAMiB,WAAWb,EAAKI,cAhB3BJ,EAAKI,QAuBxC,OACI,qBAAKH,UAAU,YAAf,SACI,cAAC,IAAD,CAAUa,SAAU,IAAKC,OAAO,cAAhC,SACKlB,O,eC7BjBmB,IAAQC,IAAIC,K,IAwFIC,E,kDArFd,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IAEDwB,MAAQ,CACVtB,MAAO,GACPuB,YAAa,CACXf,KAAM,GACNF,IAAK,KAIV,EAAKkB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKV,WAAa,EAAKA,WAAWU,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAdA,E,wDAiBPf,GACViB,KAAKC,SAAS,CACZL,YAAa,CACXf,KAAME,EAAEE,OAAOL,MACfD,IAAKuB,KAAKC,W,8BAKRpB,GACNA,EAAEqB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAG3B,GAFAU,QAAQC,IAAIF,GAEQ,KAAjBA,EAAQxB,KAAa,CACtB,IAAM2B,EAAQ,sBAAOR,KAAKL,MAAMtB,OAAlB,CAAyBgC,IACvCL,KAAKC,SAAS,CACZ5B,MAAOmC,EACPZ,YAAa,CACXf,KAAM,GACNF,IAAK,MAIX2B,QAAQC,IAAIP,KAAKL,MAAMtB,S,iCAGdM,GACT,IAAM8B,EAAcT,KAAKL,MAAMtB,MAAMqC,QAAO,SAAAnC,GAAI,OAAIA,EAAKI,MAAQA,KACjEqB,KAAKC,SAAS,CACZ5B,MAAOoC,M,gCAID5B,EAAMF,GACd,IAAMN,EAAQ2B,KAAKL,MAAMtB,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAQA,IACdJ,EAAKM,KAAOA,MAGhBmB,KAAKC,SAAS,CACZ5B,MAAOA,M,+BAKT,OACE,sBAAKG,UAAU,WAAf,UACE,uBAAME,GAAG,aAAaiC,SAAUX,KAAKD,QAArC,UACE,uBACEtB,KAAK,OACLG,MAAOoB,KAAKL,MAAMC,YAAYf,KAC9B+B,YAAY,aACZ9B,SAAUkB,KAAKH,cAEjB,uBAAOpB,KAAK,SAASG,MAAM,WAE7B,cAAC,EAAD,CACEP,MAAO2B,KAAKL,MAAMtB,MAClBe,WAAYY,KAAKZ,WACjBJ,UAAWgB,KAAKhB,mB,GA/ER6B,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6a7a586a.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Listitem.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport FlipMove from 'react-flip-move'\r\n\r\nfunction Listitem(props) {\r\n    const items = props.items;\r\n    const listItems = items.map(item => {\r\n        return (\r\n            <div className=\"list\" key={item.key}>\r\n                <p>\r\n                    <input \r\n                        type=\"text\"\r\n                        id={item.key}\r\n                        value={item.text} \r\n                        onChange={\r\n                            (e) => {\r\n                                props.setUpdate(e.target.value, item.key)\r\n                            }\r\n                        }                    \r\n                    />\r\n                    <span>\r\n                        <FontAwesomeIcon \r\n                            className=\"faicons\" \r\n                            icon=\"trash\" \r\n                            onClick={ () => props.deleteItem(item.key)}\r\n                        />\r\n                    </span>\r\n                </p>\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div className=\"todo-list\">\r\n            <FlipMove duration={500} easing=\"ease-in-out\">\r\n                {listItems}\r\n            </FlipMove>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Listitem\r\n","import React, { Component } from 'react'\nimport './App.css';\nimport Listitem from './Listitem';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash);\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       items: [],\n       currentItem: {\n         text: '',\n         key: ''\n       }\n    }\n\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n  \n  handleInput(e) {\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    console.log(newItem);\n\n    if(newItem.text !== \"\") {\n      const itemList = [...this.state.items, newItem];\n      this.setState({\n        items: itemList,\n        currentItem: {\n          text: '',\n          key: ''\n        }\n      })\n    }\n    console.log(this.state.items);\n  }\n\n  deleteItem(key) {\n    const filterItems = this.state.items.filter(item => item.key !== key);\n    this.setState({\n      items: filterItems\n    })\n  }\n\n  setUpdate(text, key) {\n    const items = this.state.items;\n    items.map(item => {\n      if(item.key === key) {\n        item.text = text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"todo-app\">\n        <form id=\"to-do-form\" onSubmit={this.addItem}>\n          <input \n            type=\"text\" \n            value={this.state.currentItem.text} \n            placeholder=\"Enter Text\" \n            onChange={this.handleInput}\n          />\n          <input type=\"submit\" value=\"Add\" />\n        </form>     \n        <Listitem \n          items={this.state.items} \n          deleteItem={this.deleteItem}\n          setUpdate={this.setUpdate}\n        /> \n      </div>\n    )\n  }\n}\n\nexport default  App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}